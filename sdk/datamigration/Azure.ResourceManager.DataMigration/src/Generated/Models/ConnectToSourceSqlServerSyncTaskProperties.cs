// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Properties for the task that validates connection to SQL Server and source server requirements for online migration. </summary>
    public partial class ConnectToSourceSqlServerSyncTaskProperties : ProjectTaskProperties
    {
        /// <summary> Initializes a new instance of ConnectToSourceSqlServerSyncTaskProperties. </summary>
        public ConnectToSourceSqlServerSyncTaskProperties()
        {
            Output = new ChangeTrackingList<ConnectToSourceSqlServerTaskOutput>();
            TaskType = TaskType.ConnectToSourceSqlServerSync;
        }

        /// <summary> Initializes a new instance of ConnectToSourceSqlServerSyncTaskProperties. </summary>
        /// <param name="taskType"> Task type. </param>
        /// <param name="errors"> Array of errors. This is ignored if submitted. </param>
        /// <param name="state"> The state of the task. This is ignored if submitted. </param>
        /// <param name="commands"> Array of command properties. </param>
        /// <param name="clientData"> Key value pairs of client data to attach meta data information to task. </param>
        /// <param name="input"> Task input. </param>
        /// <param name="output"> Task output. This is ignored if submitted. </param>
        internal ConnectToSourceSqlServerSyncTaskProperties(TaskType taskType, IReadOnlyList<ODataError> errors, TaskState? state, IReadOnlyList<CommandProperties> commands, IDictionary<string, string> clientData, ConnectToSourceSqlServerTaskInput input, IReadOnlyList<ConnectToSourceSqlServerTaskOutput> output) : base(taskType, errors, state, commands, clientData)
        {
            Input = input;
            Output = output;
            TaskType = taskType;
        }

        /// <summary> Task input. </summary>
        public ConnectToSourceSqlServerTaskInput Input { get; set; }
        /// <summary> Task output. This is ignored if submitted. </summary>
        public IReadOnlyList<ConnectToSourceSqlServerTaskOutput> Output { get; }
    }
}
