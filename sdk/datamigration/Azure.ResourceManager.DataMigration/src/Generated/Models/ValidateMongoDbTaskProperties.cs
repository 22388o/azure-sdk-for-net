// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Properties for the task that validates a migration between MongoDB data sources. </summary>
    public partial class ValidateMongoDbTaskProperties : ProjectTaskProperties
    {
        /// <summary> Initializes a new instance of ValidateMongoDbTaskProperties. </summary>
        public ValidateMongoDbTaskProperties()
        {
            Output = new ChangeTrackingList<MongoDbMigrationProgress>();
            TaskType = TaskType.ValidateMongoDb;
        }

        /// <summary> Initializes a new instance of ValidateMongoDbTaskProperties. </summary>
        /// <param name="taskType"> Task type. </param>
        /// <param name="errors"> Array of errors. This is ignored if submitted. </param>
        /// <param name="state"> The state of the task. This is ignored if submitted. </param>
        /// <param name="commands"> Array of command properties. </param>
        /// <param name="clientData"> Key value pairs of client data to attach meta data information to task. </param>
        /// <param name="input"> Describes how a MongoDB data migration should be performed. </param>
        /// <param name="output"> An array containing a single MongoDbMigrationProgress object. </param>
        internal ValidateMongoDbTaskProperties(TaskType taskType, IReadOnlyList<ODataError> errors, TaskState? state, IReadOnlyList<CommandProperties> commands, IDictionary<string, string> clientData, MongoDbMigrationSettings input, IReadOnlyList<MongoDbMigrationProgress> output) : base(taskType, errors, state, commands, clientData)
        {
            Input = input;
            Output = output;
            TaskType = taskType;
        }

        /// <summary> Describes how a MongoDB data migration should be performed. </summary>
        public MongoDbMigrationSettings Input { get; set; }
        /// <summary> An array containing a single MongoDbMigrationProgress object. </summary>
        public IReadOnlyList<MongoDbMigrationProgress> Output { get; }
    }
}
