// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.DataMigration.Models
{
    /// <summary> Base class for non sql migration task input. </summary>
    internal partial class NonSqlMigrationTaskInput
    {
        /// <summary> Initializes a new instance of NonSqlMigrationTaskInput. </summary>
        /// <param name="targetConnectionInfo"> Information for connecting to target. </param>
        /// <param name="targetDatabaseName"> Target database name. </param>
        /// <param name="projectName"> Name of the migration project. </param>
        /// <param name="projectLocation"> A URL that points to the drop location to access project artifacts. </param>
        /// <param name="selectedTables"> Metadata of the tables selected for migration. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="targetConnectionInfo"/>, <paramref name="targetDatabaseName"/>, <paramref name="projectName"/>, <paramref name="projectLocation"/> or <paramref name="selectedTables"/> is null. </exception>
        internal NonSqlMigrationTaskInput(SqlConnectionInfo targetConnectionInfo, string targetDatabaseName, string projectName, string projectLocation, IEnumerable<NonSqlDataMigrationTable> selectedTables)
        {
            if (targetConnectionInfo == null)
            {
                throw new ArgumentNullException(nameof(targetConnectionInfo));
            }
            if (targetDatabaseName == null)
            {
                throw new ArgumentNullException(nameof(targetDatabaseName));
            }
            if (projectName == null)
            {
                throw new ArgumentNullException(nameof(projectName));
            }
            if (projectLocation == null)
            {
                throw new ArgumentNullException(nameof(projectLocation));
            }
            if (selectedTables == null)
            {
                throw new ArgumentNullException(nameof(selectedTables));
            }

            TargetConnectionInfo = targetConnectionInfo;
            TargetDatabaseName = targetDatabaseName;
            ProjectName = projectName;
            ProjectLocation = projectLocation;
            SelectedTables = selectedTables.ToList();
        }

        /// <summary> Information for connecting to target. </summary>
        public SqlConnectionInfo TargetConnectionInfo { get; }
        /// <summary> Target database name. </summary>
        public string TargetDatabaseName { get; }
        /// <summary> Name of the migration project. </summary>
        public string ProjectName { get; }
        /// <summary> A URL that points to the drop location to access project artifacts. </summary>
        public string ProjectLocation { get; }
        /// <summary> Metadata of the tables selected for migration. </summary>
        public IReadOnlyList<NonSqlDataMigrationTable> SelectedTables { get; }
    }
}
