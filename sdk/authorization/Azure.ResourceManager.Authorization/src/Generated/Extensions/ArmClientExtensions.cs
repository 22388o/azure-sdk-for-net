// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.ResourceManager;

namespace Azure.ResourceManager.Authorization
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region AccessReviewScheduleDefinition
        /// <summary> Gets an object representing a AccessReviewScheduleDefinition along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AccessReviewScheduleDefinition" /> object. </returns>
        public static AccessReviewScheduleDefinition GetAccessReviewScheduleDefinition(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AccessReviewScheduleDefinition(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region AccessReviewInstance
        /// <summary> Gets an object representing a AccessReviewInstance along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AccessReviewInstance" /> object. </returns>
        public static AccessReviewInstance GetAccessReviewInstance(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AccessReviewInstance(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region TenantAccessReviewScheduleDefinitionInstance
        /// <summary> Gets an object representing a TenantAccessReviewScheduleDefinitionInstance along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantAccessReviewScheduleDefinitionInstance" /> object. </returns>
        public static TenantAccessReviewScheduleDefinitionInstance GetTenantAccessReviewScheduleDefinitionInstance(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new TenantAccessReviewScheduleDefinitionInstance(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region AccessReviewDefaultSettings
        /// <summary> Gets an object representing a AccessReviewDefaultSettings along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AccessReviewDefaultSettings" /> object. </returns>
        public static AccessReviewDefaultSettings GetAccessReviewDefaultSettings(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AccessReviewDefaultSettings(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region AccessReviewDecision
        /// <summary> Gets an object representing a AccessReviewDecision along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AccessReviewDecision" /> object. </returns>
        public static AccessReviewDecision GetAccessReviewDecision(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AccessReviewDecision(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region DenyAssignment
        /// <summary> Gets an object representing a DenyAssignment along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DenyAssignment" /> object. </returns>
        public static DenyAssignment GetDenyAssignment(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new DenyAssignment(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region DenyAssignmentById
        /// <summary> Gets an object representing a DenyAssignmentById along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DenyAssignmentById" /> object. </returns>
        public static DenyAssignmentById GetDenyAssignmentById(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new DenyAssignmentById(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ProviderOperationsMetadata
        /// <summary> Gets an object representing a ProviderOperationsMetadata along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ProviderOperationsMetadata" /> object. </returns>
        public static ProviderOperationsMetadata GetProviderOperationsMetadata(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ProviderOperationsMetadata(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RoleAssignment
        /// <summary> Gets an object representing a RoleAssignment along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoleAssignment" /> object. </returns>
        public static RoleAssignment GetRoleAssignment(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RoleAssignment(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RoleAssignmentById
        /// <summary> Gets an object representing a RoleAssignmentById along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoleAssignmentById" /> object. </returns>
        public static RoleAssignmentById GetRoleAssignmentById(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RoleAssignmentById(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RoleDefinition
        /// <summary> Gets an object representing a RoleDefinition along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoleDefinition" /> object. </returns>
        public static RoleDefinition GetRoleDefinition(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RoleDefinition(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RoleDefinitionById
        /// <summary> Gets an object representing a RoleDefinitionById along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoleDefinitionById" /> object. </returns>
        public static RoleDefinitionById GetRoleDefinitionById(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RoleDefinitionById(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RoleAssignmentSchedule
        /// <summary> Gets an object representing a RoleAssignmentSchedule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoleAssignmentSchedule" /> object. </returns>
        public static RoleAssignmentSchedule GetRoleAssignmentSchedule(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RoleAssignmentSchedule(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RoleAssignmentScheduleInstance
        /// <summary> Gets an object representing a RoleAssignmentScheduleInstance along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoleAssignmentScheduleInstance" /> object. </returns>
        public static RoleAssignmentScheduleInstance GetRoleAssignmentScheduleInstance(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RoleAssignmentScheduleInstance(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RoleAssignmentScheduleRequest
        /// <summary> Gets an object representing a RoleAssignmentScheduleRequest along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoleAssignmentScheduleRequest" /> object. </returns>
        public static RoleAssignmentScheduleRequest GetRoleAssignmentScheduleRequest(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RoleAssignmentScheduleRequest(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RoleEligibilitySchedule
        /// <summary> Gets an object representing a RoleEligibilitySchedule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoleEligibilitySchedule" /> object. </returns>
        public static RoleEligibilitySchedule GetRoleEligibilitySchedule(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RoleEligibilitySchedule(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RoleEligibilityScheduleInstance
        /// <summary> Gets an object representing a RoleEligibilityScheduleInstance along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoleEligibilityScheduleInstance" /> object. </returns>
        public static RoleEligibilityScheduleInstance GetRoleEligibilityScheduleInstance(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RoleEligibilityScheduleInstance(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RoleEligibilityScheduleRequest
        /// <summary> Gets an object representing a RoleEligibilityScheduleRequest along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoleEligibilityScheduleRequest" /> object. </returns>
        public static RoleEligibilityScheduleRequest GetRoleEligibilityScheduleRequest(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RoleEligibilityScheduleRequest(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RoleManagementPolicy
        /// <summary> Gets an object representing a RoleManagementPolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoleManagementPolicy" /> object. </returns>
        public static RoleManagementPolicy GetRoleManagementPolicy(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RoleManagementPolicy(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RoleManagementPolicyAssignment
        /// <summary> Gets an object representing a RoleManagementPolicyAssignment along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RoleManagementPolicyAssignment" /> object. </returns>
        public static RoleManagementPolicyAssignment GetRoleManagementPolicyAssignment(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RoleManagementPolicyAssignment(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}
