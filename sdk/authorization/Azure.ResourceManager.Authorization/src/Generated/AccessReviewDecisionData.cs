// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.ResourceManager;
using Azure.ResourceManager.Authorization.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Authorization
{
    /// <summary> A class representing the AccessReviewDecision data model. </summary>
    public partial class AccessReviewDecisionData : Resource
    {
        /// <summary> Initializes a new instance of AccessReviewDecisionData. </summary>
        internal AccessReviewDecisionData()
        {
        }

        /// <summary> Initializes a new instance of AccessReviewDecisionData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="recommendation"> The feature- generated recommendation shown to the reviewer. </param>
        /// <param name="decision"> The decision on the approval step. This value is initially set to NotReviewed. Approvers can take action of Approve/Deny. </param>
        /// <param name="justification"> Justification provided by approvers for their action. </param>
        /// <param name="reviewedDateTime"> Date Time when a decision was taken. </param>
        /// <param name="applyResult"> The outcome of applying the decision. </param>
        /// <param name="appliedDateTime"> The date and time when the review decision was applied. </param>
        /// <param name="principalIdPropertiesAppliedByPrincipalId"> The identity id. </param>
        /// <param name="principalTypePropertiesAppliedByPrincipalType"> The identity type : user/servicePrincipal. </param>
        /// <param name="principalNamePropertiesAppliedByPrincipalName"> The identity display name. </param>
        /// <param name="userPrincipalNamePropertiesAppliedByUserPrincipalName"> The user principal name(if valid). </param>
        /// <param name="principalIdPropertiesReviewedByPrincipalId"> The identity id. </param>
        /// <param name="principalTypePropertiesReviewedByPrincipalType"> The identity type : user/servicePrincipal. </param>
        /// <param name="principalNamePropertiesReviewedByPrincipalName"> The identity display name. </param>
        /// <param name="userPrincipalNamePropertiesReviewedByUserPrincipalName"> The user principal name(if valid). </param>
        /// <param name="typePropertiesTargetType"> The type of decision target : User/ServicePrincipal. </param>
        internal AccessReviewDecisionData(ResourceIdentifier id, string name, ResourceType type, AccessRecommendationType? recommendation, AccessReviewResult? decision, string justification, DateTimeOffset? reviewedDateTime, AccessReviewApplyResult? applyResult, DateTimeOffset? appliedDateTime, string principalIdPropertiesAppliedByPrincipalId, AccessReviewActorIdentityType? principalTypePropertiesAppliedByPrincipalType, string principalNamePropertiesAppliedByPrincipalName, string userPrincipalNamePropertiesAppliedByUserPrincipalName, string principalIdPropertiesReviewedByPrincipalId, AccessReviewActorIdentityType? principalTypePropertiesReviewedByPrincipalType, string principalNamePropertiesReviewedByPrincipalName, string userPrincipalNamePropertiesReviewedByUserPrincipalName, DecisionTargetType? typePropertiesTargetType) : base(id, name, type)
        {
            Recommendation = recommendation;
            Decision = decision;
            Justification = justification;
            ReviewedDateTime = reviewedDateTime;
            ApplyResult = applyResult;
            AppliedDateTime = appliedDateTime;
            PrincipalIdPropertiesAppliedByPrincipalId = principalIdPropertiesAppliedByPrincipalId;
            PrincipalTypePropertiesAppliedByPrincipalType = principalTypePropertiesAppliedByPrincipalType;
            PrincipalNamePropertiesAppliedByPrincipalName = principalNamePropertiesAppliedByPrincipalName;
            UserPrincipalNamePropertiesAppliedByUserPrincipalName = userPrincipalNamePropertiesAppliedByUserPrincipalName;
            PrincipalIdPropertiesReviewedByPrincipalId = principalIdPropertiesReviewedByPrincipalId;
            PrincipalTypePropertiesReviewedByPrincipalType = principalTypePropertiesReviewedByPrincipalType;
            PrincipalNamePropertiesReviewedByPrincipalName = principalNamePropertiesReviewedByPrincipalName;
            UserPrincipalNamePropertiesReviewedByUserPrincipalName = userPrincipalNamePropertiesReviewedByUserPrincipalName;
            TypePropertiesTargetType = typePropertiesTargetType;
        }

        /// <summary> The feature- generated recommendation shown to the reviewer. </summary>
        public AccessRecommendationType? Recommendation { get; }
        /// <summary> The decision on the approval step. This value is initially set to NotReviewed. Approvers can take action of Approve/Deny. </summary>
        public AccessReviewResult? Decision { get; }
        /// <summary> Justification provided by approvers for their action. </summary>
        public string Justification { get; }
        /// <summary> Date Time when a decision was taken. </summary>
        public DateTimeOffset? ReviewedDateTime { get; }
        /// <summary> The outcome of applying the decision. </summary>
        public AccessReviewApplyResult? ApplyResult { get; }
        /// <summary> The date and time when the review decision was applied. </summary>
        public DateTimeOffset? AppliedDateTime { get; }
        /// <summary> The identity id. </summary>
        public string PrincipalIdPropertiesAppliedByPrincipalId { get; }
        /// <summary> The identity type : user/servicePrincipal. </summary>
        public AccessReviewActorIdentityType? PrincipalTypePropertiesAppliedByPrincipalType { get; }
        /// <summary> The identity display name. </summary>
        public string PrincipalNamePropertiesAppliedByPrincipalName { get; }
        /// <summary> The user principal name(if valid). </summary>
        public string UserPrincipalNamePropertiesAppliedByUserPrincipalName { get; }
        /// <summary> The identity id. </summary>
        public string PrincipalIdPropertiesReviewedByPrincipalId { get; }
        /// <summary> The identity type : user/servicePrincipal. </summary>
        public AccessReviewActorIdentityType? PrincipalTypePropertiesReviewedByPrincipalType { get; }
        /// <summary> The identity display name. </summary>
        public string PrincipalNamePropertiesReviewedByPrincipalName { get; }
        /// <summary> The user principal name(if valid). </summary>
        public string UserPrincipalNamePropertiesReviewedByUserPrincipalName { get; }
        /// <summary> The type of decision target : User/ServicePrincipal. </summary>
        internal DecisionTargetType? TypePropertiesTargetType { get; set; }
    }
}
