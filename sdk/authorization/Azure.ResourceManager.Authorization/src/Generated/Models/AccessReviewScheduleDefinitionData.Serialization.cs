// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Authorization.Models;

namespace Azure.ResourceManager.Authorization
{
    public partial class AccessReviewScheduleDefinitionData
    {
        internal static AccessReviewScheduleDefinitionData DeserializeAccessReviewScheduleDefinitionData(JsonElement element)
        {
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<string> displayName = default;
            Optional<AccessReviewScheduleDefinitionStatus> status = default;
            Optional<string> descriptionForAdmins = default;
            Optional<string> descriptionForReviewers = default;
            Optional<IReadOnlyList<AccessReviewReviewer>> reviewers = default;
            Optional<AccessReviewScheduleDefinitionReviewersType> reviewersType = default;
            Optional<IReadOnlyList<AccessReviewInstanceData>> instances = default;
            Optional<string> resourceId = default;
            Optional<string> roleDefinitionId = default;
            Optional<AccessReviewScopePrincipalType> principalType = default;
            Optional<bool> mailNotificationsEnabled = default;
            Optional<bool> reminderNotificationsEnabled = default;
            Optional<bool> defaultDecisionEnabled = default;
            Optional<bool> justificationRequiredOnApproval = default;
            Optional<DefaultDecisionType> defaultDecision = default;
            Optional<bool> autoApplyDecisionsEnabled = default;
            Optional<bool> recommendationsEnabled = default;
            Optional<int> instanceDurationInDays = default;
            Optional<AccessReviewRecurrenceRangeType> type0 = default;
            Optional<int> numberOfOccurrences = default;
            Optional<DateTimeOffset?> startDate = default;
            Optional<DateTimeOffset?> endDate = default;
            Optional<AccessReviewRecurrencePatternType> type1 = default;
            Optional<int> interval = default;
            Optional<string> principalId = default;
            Optional<AccessReviewActorIdentityType> principalType0 = default;
            Optional<string> principalName = default;
            Optional<string> userPrincipalName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("displayName"))
                        {
                            displayName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("status"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            status = new AccessReviewScheduleDefinitionStatus(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("descriptionForAdmins"))
                        {
                            descriptionForAdmins = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("descriptionForReviewers"))
                        {
                            descriptionForReviewers = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("reviewers"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<AccessReviewReviewer> array = new List<AccessReviewReviewer>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(AccessReviewReviewer.DeserializeAccessReviewReviewer(item));
                            }
                            reviewers = array;
                            continue;
                        }
                        if (property0.NameEquals("reviewersType"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            reviewersType = new AccessReviewScheduleDefinitionReviewersType(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("instances"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<AccessReviewInstanceData> array = new List<AccessReviewInstanceData>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(AccessReviewInstanceData.DeserializeAccessReviewInstanceData(item));
                            }
                            instances = array;
                            continue;
                        }
                        if (property0.NameEquals("scope"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            foreach (var property1 in property0.Value.EnumerateObject())
                            {
                                if (property1.NameEquals("resourceId"))
                                {
                                    resourceId = property1.Value.GetString();
                                    continue;
                                }
                                if (property1.NameEquals("roleDefinitionId"))
                                {
                                    roleDefinitionId = property1.Value.GetString();
                                    continue;
                                }
                                if (property1.NameEquals("principalType"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    principalType = new AccessReviewScopePrincipalType(property1.Value.GetString());
                                    continue;
                                }
                            }
                            continue;
                        }
                        if (property0.NameEquals("settings"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            foreach (var property1 in property0.Value.EnumerateObject())
                            {
                                if (property1.NameEquals("mailNotificationsEnabled"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    mailNotificationsEnabled = property1.Value.GetBoolean();
                                    continue;
                                }
                                if (property1.NameEquals("reminderNotificationsEnabled"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    reminderNotificationsEnabled = property1.Value.GetBoolean();
                                    continue;
                                }
                                if (property1.NameEquals("defaultDecisionEnabled"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    defaultDecisionEnabled = property1.Value.GetBoolean();
                                    continue;
                                }
                                if (property1.NameEquals("justificationRequiredOnApproval"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    justificationRequiredOnApproval = property1.Value.GetBoolean();
                                    continue;
                                }
                                if (property1.NameEquals("defaultDecision"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    defaultDecision = new DefaultDecisionType(property1.Value.GetString());
                                    continue;
                                }
                                if (property1.NameEquals("autoApplyDecisionsEnabled"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    autoApplyDecisionsEnabled = property1.Value.GetBoolean();
                                    continue;
                                }
                                if (property1.NameEquals("recommendationsEnabled"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    recommendationsEnabled = property1.Value.GetBoolean();
                                    continue;
                                }
                                if (property1.NameEquals("instanceDurationInDays"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    instanceDurationInDays = property1.Value.GetInt32();
                                    continue;
                                }
                                if (property1.NameEquals("recurrence"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    foreach (var property2 in property1.Value.EnumerateObject())
                                    {
                                        if (property2.NameEquals("range"))
                                        {
                                            if (property2.Value.ValueKind == JsonValueKind.Null)
                                            {
                                                property2.ThrowNonNullablePropertyIsNull();
                                                continue;
                                            }
                                            foreach (var property3 in property2.Value.EnumerateObject())
                                            {
                                                if (property3.NameEquals("type"))
                                                {
                                                    if (property3.Value.ValueKind == JsonValueKind.Null)
                                                    {
                                                        property3.ThrowNonNullablePropertyIsNull();
                                                        continue;
                                                    }
                                                    type0 = new AccessReviewRecurrenceRangeType(property3.Value.GetString());
                                                    continue;
                                                }
                                                if (property3.NameEquals("numberOfOccurrences"))
                                                {
                                                    if (property3.Value.ValueKind == JsonValueKind.Null)
                                                    {
                                                        property3.ThrowNonNullablePropertyIsNull();
                                                        continue;
                                                    }
                                                    numberOfOccurrences = property3.Value.GetInt32();
                                                    continue;
                                                }
                                                if (property3.NameEquals("startDate"))
                                                {
                                                    if (property3.Value.ValueKind == JsonValueKind.Null)
                                                    {
                                                        startDate = null;
                                                        continue;
                                                    }
                                                    startDate = property3.Value.GetDateTimeOffset("O");
                                                    continue;
                                                }
                                                if (property3.NameEquals("endDate"))
                                                {
                                                    if (property3.Value.ValueKind == JsonValueKind.Null)
                                                    {
                                                        endDate = null;
                                                        continue;
                                                    }
                                                    endDate = property3.Value.GetDateTimeOffset("O");
                                                    continue;
                                                }
                                            }
                                            continue;
                                        }
                                        if (property2.NameEquals("pattern"))
                                        {
                                            if (property2.Value.ValueKind == JsonValueKind.Null)
                                            {
                                                property2.ThrowNonNullablePropertyIsNull();
                                                continue;
                                            }
                                            foreach (var property3 in property2.Value.EnumerateObject())
                                            {
                                                if (property3.NameEquals("type"))
                                                {
                                                    if (property3.Value.ValueKind == JsonValueKind.Null)
                                                    {
                                                        property3.ThrowNonNullablePropertyIsNull();
                                                        continue;
                                                    }
                                                    type1 = new AccessReviewRecurrencePatternType(property3.Value.GetString());
                                                    continue;
                                                }
                                                if (property3.NameEquals("interval"))
                                                {
                                                    if (property3.Value.ValueKind == JsonValueKind.Null)
                                                    {
                                                        property3.ThrowNonNullablePropertyIsNull();
                                                        continue;
                                                    }
                                                    interval = property3.Value.GetInt32();
                                                    continue;
                                                }
                                            }
                                            continue;
                                        }
                                    }
                                    continue;
                                }
                            }
                            continue;
                        }
                        if (property0.NameEquals("createdBy"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            foreach (var property1 in property0.Value.EnumerateObject())
                            {
                                if (property1.NameEquals("principalId"))
                                {
                                    principalId = property1.Value.GetString();
                                    continue;
                                }
                                if (property1.NameEquals("principalType"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    principalType0 = new AccessReviewActorIdentityType(property1.Value.GetString());
                                    continue;
                                }
                                if (property1.NameEquals("principalName"))
                                {
                                    principalName = property1.Value.GetString();
                                    continue;
                                }
                                if (property1.NameEquals("userPrincipalName"))
                                {
                                    userPrincipalName = property1.Value.GetString();
                                    continue;
                                }
                            }
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new AccessReviewScheduleDefinitionData(id, name, type, displayName.Value, Optional.ToNullable(status), descriptionForAdmins.Value, descriptionForReviewers.Value, Optional.ToList(reviewers), Optional.ToNullable(reviewersType), Optional.ToList(instances), resourceId.Value, roleDefinitionId.Value, Optional.ToNullable(principalType), Optional.ToNullable(mailNotificationsEnabled), Optional.ToNullable(reminderNotificationsEnabled), Optional.ToNullable(defaultDecisionEnabled), Optional.ToNullable(justificationRequiredOnApproval), Optional.ToNullable(defaultDecision), Optional.ToNullable(autoApplyDecisionsEnabled), Optional.ToNullable(recommendationsEnabled), Optional.ToNullable(instanceDurationInDays), Optional.ToNullable(type0), Optional.ToNullable(numberOfOccurrences), Optional.ToNullable(startDate), Optional.ToNullable(endDate), Optional.ToNullable(type1), Optional.ToNullable(interval), principalId.Value, Optional.ToNullable(principalType0), principalName.Value, userPrincipalName.Value);
        }
    }
}
