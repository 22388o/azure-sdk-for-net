// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Authorization.Models
{
    public partial class RoleAssignmentMetricsResult
    {
        internal static RoleAssignmentMetricsResult DeserializeRoleAssignmentMetricsResult(JsonElement element)
        {
            Optional<string> subscriptionId = default;
            Optional<long> roleAssignmentsLimit = default;
            Optional<long> roleAssignmentsCurrentCount = default;
            Optional<long> roleAssignmentsRemainingCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("subscriptionId"))
                {
                    subscriptionId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("roleAssignmentsLimit"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    roleAssignmentsLimit = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("roleAssignmentsCurrentCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    roleAssignmentsCurrentCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("roleAssignmentsRemainingCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    roleAssignmentsRemainingCount = property.Value.GetInt64();
                    continue;
                }
            }
            return new RoleAssignmentMetricsResult(subscriptionId.Value, Optional.ToNullable(roleAssignmentsLimit), Optional.ToNullable(roleAssignmentsCurrentCount), Optional.ToNullable(roleAssignmentsRemainingCount));
        }
    }
}
