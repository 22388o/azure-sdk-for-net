// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.ResourceManager;
using Azure.ResourceManager.Authorization.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Authorization
{
    /// <summary> A class representing the AccessReviewDefaultSettings data model. </summary>
    public partial class AccessReviewDefaultSettingsData : Resource
    {
        /// <summary> Initializes a new instance of AccessReviewDefaultSettingsData. </summary>
        internal AccessReviewDefaultSettingsData()
        {
        }

        /// <summary> Initializes a new instance of AccessReviewDefaultSettingsData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="mailNotificationsEnabled"> Flag to indicate whether sending mails to reviewers and the review creator is enabled. </param>
        /// <param name="reminderNotificationsEnabled"> Flag to indicate whether sending reminder emails to reviewers are enabled. </param>
        /// <param name="defaultDecisionEnabled"> Flag to indicate whether reviewers are required to provide a justification when reviewing access. </param>
        /// <param name="justificationRequiredOnApproval"> Flag to indicate whether the reviewer is required to pass justification when recording a decision. </param>
        /// <param name="defaultDecision"> This specifies the behavior for the autoReview feature when an access review completes. </param>
        /// <param name="autoApplyDecisionsEnabled"> Flag to indicate whether auto-apply capability, to automatically change the target object access resource, is enabled. If not enabled, a user must, after the review completes, apply the access review. </param>
        /// <param name="recommendationsEnabled"> Flag to indicate whether showing recommendations to reviewers is enabled. </param>
        /// <param name="instanceDurationInDays"> The duration in days for an instance. </param>
        /// <param name="typePropertiesRecurrenceRangeType"> The recurrence range type. The possible values are: endDate, noEnd, numbered. </param>
        /// <param name="numberOfOccurrences"> The number of times to repeat the access review. Required and must be positive if type is numbered. </param>
        /// <param name="startDate"> The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create. </param>
        /// <param name="endDate"> The DateTime when the review is scheduled to end. Required if type is endDate. </param>
        /// <param name="typePropertiesRecurrencePatternType"> The recurrence type : weekly, monthly, etc. </param>
        /// <param name="interval"> The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly. </param>
        internal AccessReviewDefaultSettingsData(ResourceIdentifier id, string name, ResourceType type, bool? mailNotificationsEnabled, bool? reminderNotificationsEnabled, bool? defaultDecisionEnabled, bool? justificationRequiredOnApproval, DefaultDecisionType? defaultDecision, bool? autoApplyDecisionsEnabled, bool? recommendationsEnabled, int? instanceDurationInDays, AccessReviewRecurrenceRangeType? typePropertiesRecurrenceRangeType, int? numberOfOccurrences, DateTimeOffset? startDate, DateTimeOffset? endDate, AccessReviewRecurrencePatternType? typePropertiesRecurrencePatternType, int? interval) : base(id, name, type)
        {
            MailNotificationsEnabled = mailNotificationsEnabled;
            ReminderNotificationsEnabled = reminderNotificationsEnabled;
            DefaultDecisionEnabled = defaultDecisionEnabled;
            JustificationRequiredOnApproval = justificationRequiredOnApproval;
            DefaultDecision = defaultDecision;
            AutoApplyDecisionsEnabled = autoApplyDecisionsEnabled;
            RecommendationsEnabled = recommendationsEnabled;
            InstanceDurationInDays = instanceDurationInDays;
            TypePropertiesRecurrenceRangeType = typePropertiesRecurrenceRangeType;
            NumberOfOccurrences = numberOfOccurrences;
            StartDate = startDate;
            EndDate = endDate;
            TypePropertiesRecurrencePatternType = typePropertiesRecurrencePatternType;
            Interval = interval;
        }

        /// <summary> Flag to indicate whether sending mails to reviewers and the review creator is enabled. </summary>
        public bool? MailNotificationsEnabled { get; }
        /// <summary> Flag to indicate whether sending reminder emails to reviewers are enabled. </summary>
        public bool? ReminderNotificationsEnabled { get; }
        /// <summary> Flag to indicate whether reviewers are required to provide a justification when reviewing access. </summary>
        public bool? DefaultDecisionEnabled { get; }
        /// <summary> Flag to indicate whether the reviewer is required to pass justification when recording a decision. </summary>
        public bool? JustificationRequiredOnApproval { get; }
        /// <summary> This specifies the behavior for the autoReview feature when an access review completes. </summary>
        public DefaultDecisionType? DefaultDecision { get; }
        /// <summary> Flag to indicate whether auto-apply capability, to automatically change the target object access resource, is enabled. If not enabled, a user must, after the review completes, apply the access review. </summary>
        public bool? AutoApplyDecisionsEnabled { get; }
        /// <summary> Flag to indicate whether showing recommendations to reviewers is enabled. </summary>
        public bool? RecommendationsEnabled { get; }
        /// <summary> The duration in days for an instance. </summary>
        public int? InstanceDurationInDays { get; }
        /// <summary> The recurrence range type. The possible values are: endDate, noEnd, numbered. </summary>
        public AccessReviewRecurrenceRangeType? TypePropertiesRecurrenceRangeType { get; }
        /// <summary> The number of times to repeat the access review. Required and must be positive if type is numbered. </summary>
        public int? NumberOfOccurrences { get; }
        /// <summary> The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create. </summary>
        public DateTimeOffset? StartDate { get; }
        /// <summary> The DateTime when the review is scheduled to end. Required if type is endDate. </summary>
        public DateTimeOffset? EndDate { get; }
        /// <summary> The recurrence type : weekly, monthly, etc. </summary>
        public AccessReviewRecurrencePatternType? TypePropertiesRecurrencePatternType { get; }
        /// <summary> The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly. </summary>
        public int? Interval { get; }
    }
}
