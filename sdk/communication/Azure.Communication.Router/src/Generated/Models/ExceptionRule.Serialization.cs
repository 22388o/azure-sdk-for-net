// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.Router.Models
{
    public partial class ExceptionRule : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Trigger))
            {
                if (Trigger != null)
                {
                    writer.WritePropertyName("trigger");
                    writer.WriteObjectValue(Trigger);
                }
                else
                {
                    writer.WriteNull("trigger");
                }
            }
            if (Optional.IsDefined(Action))
            {
                if (Action != null)
                {
                    writer.WritePropertyName("action");
                    writer.WriteObjectValue(Action);
                }
                else
                {
                    writer.WriteNull("action");
                }
            }
            writer.WriteEndObject();
        }

        internal static ExceptionRule DeserializeExceptionRule(JsonElement element)
        {
            Optional<ExceptionRuleTrigger> trigger = default;
            Optional<ExceptionRuleAction> action = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("trigger"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        trigger = null;
                        continue;
                    }
                    trigger = ExceptionRuleTrigger.DeserializeExceptionRuleTrigger(property.Value);
                    continue;
                }
                if (property.NameEquals("action"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        action = null;
                        continue;
                    }
                    action = ExceptionRuleAction.DeserializeExceptionRuleAction(property.Value);
                    continue;
                }
            }
            return new ExceptionRule(trigger.Value, action.Value);
        }
    }
}
