// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Communication.Router.Models
{
    /// <summary> The Worker. </summary>
    public partial class Worker
    {
        /// <summary> Initializes a new instance of Worker. </summary>
        internal Worker()
        {
            QueueAssignments = new ChangeTrackingList<WorkerQueueAssignmentsItem>();
            Abilities = new ChangeTrackingDictionary<string, int>();
            Labels = new ChangeTrackingDictionary<string, string>();
            SocketConfigurations = new ChangeTrackingList<SocketConfiguration>();
            Offers = new ChangeTrackingList<Offer>();
            AssignedJobs = new ChangeTrackingList<JobAssignment>();
        }

        /// <summary> Initializes a new instance of Worker. </summary>
        /// <param name="id"> . </param>
        /// <param name="state"> . </param>
        /// <param name="queueAssignments"> . </param>
        /// <param name="totalCapacityScore"> . </param>
        /// <param name="abilities"> Dictionary of &lt;integer&gt;. </param>
        /// <param name="labels"> Dictionary of &lt;string&gt;. </param>
        /// <param name="socketConfigurations"> . </param>
        /// <param name="offers"> . </param>
        /// <param name="assignedJobs"> . </param>
        internal Worker(string id, WorkerState? state, IReadOnlyList<WorkerQueueAssignmentsItem> queueAssignments, int? totalCapacityScore, IReadOnlyDictionary<string, int> abilities, IReadOnlyDictionary<string, string> labels, IReadOnlyList<SocketConfiguration> socketConfigurations, IReadOnlyList<Offer> offers, IReadOnlyList<JobAssignment> assignedJobs)
        {
            Id = id;
            State = state;
            QueueAssignments = queueAssignments;
            TotalCapacityScore = totalCapacityScore;
            Abilities = abilities;
            Labels = labels;
            SocketConfigurations = socketConfigurations;
            Offers = offers;
            AssignedJobs = assignedJobs;
        }

        public string Id { get; }
        public WorkerState? State { get; }
        public IReadOnlyList<WorkerQueueAssignmentsItem> QueueAssignments { get; }
        public int? TotalCapacityScore { get; }
        /// <summary> Dictionary of &lt;integer&gt;. </summary>
        public IReadOnlyDictionary<string, int> Abilities { get; }
        /// <summary> Dictionary of &lt;string&gt;. </summary>
        public IReadOnlyDictionary<string, string> Labels { get; }
        public IReadOnlyList<SocketConfiguration> SocketConfigurations { get; }
        public IReadOnlyList<Offer> Offers { get; }
        public IReadOnlyList<JobAssignment> AssignedJobs { get; }
    }
}
