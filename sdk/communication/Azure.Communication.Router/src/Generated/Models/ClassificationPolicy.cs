// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Communication.Router.Models
{
    /// <summary> A container for the rules that govern how jobs are classified. </summary>
    public partial class ClassificationPolicy
    {
        /// <summary> Initializes a new instance of ClassificationPolicy. </summary>
        internal ClassificationPolicy()
        {
        }

        /// <summary> Initializes a new instance of ClassificationPolicy. </summary>
        /// <param name="id"> Unique identifier of this policy. </param>
        /// <param name="name"> Friendly name of this policy. </param>
        /// <param name="defaultQueueId"> The default queue to select if the rules don&apos;t find a match. </param>
        /// <param name="queueSelectionRules"> The rules to select a queue for a given job. </param>
        /// <param name="workerAbilityRules"> The rules to determine the minimum worker abilities required to service a given job. </param>
        /// <param name="prioritizationRules"> The rules to determine a priority score for a given job. </param>
        internal ClassificationPolicy(string id, string name, string defaultQueueId, ClassificationPolicyQueueSelectionRules queueSelectionRules, ClassificationPolicyWorkerAbilityRules workerAbilityRules, ClassificationPolicyPrioritizationRules prioritizationRules)
        {
            Id = id;
            Name = name;
            DefaultQueueId = defaultQueueId;
            QueueSelectionRules = queueSelectionRules;
            WorkerAbilityRules = workerAbilityRules;
            PrioritizationRules = prioritizationRules;
        }

        /// <summary> Unique identifier of this policy. </summary>
        public string Id { get; }
        /// <summary> Friendly name of this policy. </summary>
        public string Name { get; }
        /// <summary> The default queue to select if the rules don&apos;t find a match. </summary>
        public string DefaultQueueId { get; }
        /// <summary> The rules to select a queue for a given job. </summary>
        public ClassificationPolicyQueueSelectionRules QueueSelectionRules { get; }
        /// <summary> The rules to determine the minimum worker abilities required to service a given job. </summary>
        public ClassificationPolicyWorkerAbilityRules WorkerAbilityRules { get; }
        /// <summary> The rules to determine a priority score for a given job. </summary>
        public ClassificationPolicyPrioritizationRules PrioritizationRules { get; }
    }
}
