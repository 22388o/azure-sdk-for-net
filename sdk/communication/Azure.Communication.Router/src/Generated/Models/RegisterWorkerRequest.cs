// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Communication.Router.Models
{
    /// <summary> Request payload for registering workers. </summary>
    public partial class RegisterWorkerRequest
    {
        /// <summary> Initializes a new instance of RegisterWorkerRequest. </summary>
        public RegisterWorkerRequest()
        {
            QueueAssignments = new ChangeTrackingList<RegisterWorkerRequestQueueAssignmentsItem>();
            Abilities = new ChangeTrackingDictionary<string, int>();
            Labels = new ChangeTrackingDictionary<string, string>();
            SocketConfigurations = new ChangeTrackingList<SocketConfiguration>();
        }

        /// <summary> Unique key that identifies this worker. </summary>
        public string Id { get; set; }
        /// <summary> The queues assignments for this worker. </summary>
        public IList<RegisterWorkerRequestQueueAssignmentsItem> QueueAssignments { get; set; }
        /// <summary> Total score that can be consumed by engaged sockets under this worker. </summary>
        public int? TotalCapacityScore { get; set; }
        /// <summary> Indicates the level of the named abilities of this worker. </summary>
        public IDictionary<string, int> Abilities { get; set; }
        /// <summary> A set of key/value pairs used by the distribution policy to match the worker according to specific rules. </summary>
        public IDictionary<string, string> Labels { get; set; }
        /// <summary> A collection of sockets that define how the worker can do concurrent work. </summary>
        public IList<SocketConfiguration> SocketConfigurations { get; set; }
    }
}
