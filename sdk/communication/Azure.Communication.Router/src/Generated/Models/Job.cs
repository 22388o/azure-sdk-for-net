// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Communication.Router.Models
{
    /// <summary> The Job. </summary>
    public partial class Job
    {
        /// <summary> Initializes a new instance of Job. </summary>
        internal Job()
        {
            RequiredAbilities = new ChangeTrackingDictionary<string, int>();
            Labels = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of Job. </summary>
        /// <param name="id"> The id of the Job. </param>
        /// <param name="channelReference"> Reference to an external parent context, eg. call ID. </param>
        /// <param name="jobType"> . </param>
        /// <param name="jobStatus"> . </param>
        /// <param name="enqueueTimeUtc"> The time a job was queued. </param>
        /// <param name="channelId"> The channel or modality upon which this job will be executed. </param>
        /// <param name="classificationPolicyId"> The Id of the Classification policy used for classifying a job. </param>
        /// <param name="queueId"> The Id of the Queue that a job is queued to. </param>
        /// <param name="priority"> The priority of this job. </param>
        /// <param name="dispositionCode"> Reason code for cancelled or closed jobs. </param>
        /// <param name="requiredAbilities"> Minimum required worker abilities needed to service this job. </param>
        /// <param name="labels"> A set of key/value pairs used by the classification policy to determine queue, priority and required abilities. </param>
        internal Job(string id, string channelReference, JobType? jobType, JobStatus? jobStatus, DateTimeOffset? enqueueTimeUtc, string channelId, string classificationPolicyId, string queueId, int? priority, string dispositionCode, IReadOnlyDictionary<string, int> requiredAbilities, IReadOnlyDictionary<string, string> labels)
        {
            Id = id;
            ChannelReference = channelReference;
            JobType = jobType;
            JobStatus = jobStatus;
            EnqueueTimeUtc = enqueueTimeUtc;
            ChannelId = channelId;
            ClassificationPolicyId = classificationPolicyId;
            QueueId = queueId;
            Priority = priority;
            DispositionCode = dispositionCode;
            RequiredAbilities = requiredAbilities;
            Labels = labels;
        }

        /// <summary> The id of the Job. </summary>
        public string Id { get; }
        /// <summary> Reference to an external parent context, eg. call ID. </summary>
        public string ChannelReference { get; }
        public JobType? JobType { get; }
        public JobStatus? JobStatus { get; }
        /// <summary> The time a job was queued. </summary>
        public DateTimeOffset? EnqueueTimeUtc { get; }
        /// <summary> The channel or modality upon which this job will be executed. </summary>
        public string ChannelId { get; }
        /// <summary> The Id of the Classification policy used for classifying a job. </summary>
        public string ClassificationPolicyId { get; }
        /// <summary> The Id of the Queue that a job is queued to. </summary>
        public string QueueId { get; }
        /// <summary> The priority of this job. </summary>
        public int? Priority { get; }
        /// <summary> Reason code for cancelled or closed jobs. </summary>
        public string DispositionCode { get; }
        /// <summary> Minimum required worker abilities needed to service this job. </summary>
        public IReadOnlyDictionary<string, int> RequiredAbilities { get; }
        /// <summary> A set of key/value pairs used by the classification policy to determine queue, priority and required abilities. </summary>
        public IReadOnlyDictionary<string, string> Labels { get; }
    }
}
