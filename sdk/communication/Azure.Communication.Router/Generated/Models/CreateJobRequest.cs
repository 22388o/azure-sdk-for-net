// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Communication.Router.Models
{
    /// <summary> Request payload for creating new jobs. </summary>
    public partial class CreateJobRequest
    {
        /// <summary> Initializes a new instance of CreateJobRequest. </summary>
        /// <param name="jobType"> . </param>
        /// <param name="channelId"> The channel or modality upon which this job will be executed. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="channelId"/> is null. </exception>
        public CreateJobRequest(JobType jobType, string channelId)
        {
            if (channelId == null)
            {
                throw new ArgumentNullException(nameof(channelId));
            }

            JobType = jobType;
            ChannelId = channelId;
            RequiredAbilities = new ChangeTrackingDictionary<string, int>();
            Labels = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Reference to an external parent context, eg. call ID. </summary>
        public string ChannelReference { get; set; }
        public JobType JobType { get; }
        /// <summary> The channel or modality upon which this job will be executed. </summary>
        public string ChannelId { get; }
        /// <summary>
        /// (optional) The classification policy that will determine queue, priority and required abilities.
        /// 
        /// If this is omitted, then QueueID, Priority and RequiredAbilities become required.
        /// </summary>
        public string ClassificationPolicyId { get; set; }
        /// <summary> (optional) If not classification policy is specified, then you must manually specify a queue. </summary>
        public string QueueId { get; set; }
        /// <summary> (optional) If not classification policy is specified, then you must manually specify a priority. </summary>
        public int? Priority { get; set; }
        /// <summary>
        /// Minimum required worker abilities needed to service this job.
        /// 
        /// Can also be populated by the classification policy.
        /// </summary>
        public IDictionary<string, int> RequiredAbilities { get; set; }
        /// <summary> A set of key/value pairs used by the classification policy to determine queue, priority and required abilities. </summary>
        public IDictionary<string, string> Labels { get; set; }
    }
}
