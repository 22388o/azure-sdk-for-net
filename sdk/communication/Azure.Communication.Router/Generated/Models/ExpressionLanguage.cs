// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Communication.Router.Models
{
    /// <summary> The available expression languages that can be configured. </summary>
    internal readonly partial struct ExpressionLanguage : IEquatable<ExpressionLanguage>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="ExpressionLanguage"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ExpressionLanguage(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string JavascriptValue = "Javascript";
        private const string PythonValue = "Python";

        /// <summary> Javascript. </summary>
        public static ExpressionLanguage Javascript { get; } = new ExpressionLanguage(JavascriptValue);
        /// <summary> Python. </summary>
        public static ExpressionLanguage Python { get; } = new ExpressionLanguage(PythonValue);
        /// <summary> Determines if two <see cref="ExpressionLanguage"/> values are the same. </summary>
        public static bool operator ==(ExpressionLanguage left, ExpressionLanguage right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ExpressionLanguage"/> values are not the same. </summary>
        public static bool operator !=(ExpressionLanguage left, ExpressionLanguage right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ExpressionLanguage"/>. </summary>
        public static implicit operator ExpressionLanguage(string value) => new ExpressionLanguage(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ExpressionLanguage other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ExpressionLanguage other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
