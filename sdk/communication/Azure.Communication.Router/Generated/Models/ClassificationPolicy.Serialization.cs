// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Communication.Router.Models
{
    public partial class ClassificationPolicy
    {
        internal static ClassificationPolicy DeserializeClassificationPolicy(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> defaultQueueId = default;
            Optional<ClassificationPolicyQueueSelectionRules> queueSelectionRules = default;
            Optional<ClassificationPolicyWorkerAbilityRules> workerAbilityRules = default;
            Optional<ClassificationPolicyPrioritizationRules> prioritizationRules = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        id = null;
                        continue;
                    }
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        name = null;
                        continue;
                    }
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("defaultQueueId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        defaultQueueId = null;
                        continue;
                    }
                    defaultQueueId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("queueSelectionRules"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        queueSelectionRules = null;
                        continue;
                    }
                    queueSelectionRules = ClassificationPolicyQueueSelectionRules.DeserializeClassificationPolicyQueueSelectionRules(property.Value);
                    continue;
                }
                if (property.NameEquals("workerAbilityRules"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        workerAbilityRules = null;
                        continue;
                    }
                    workerAbilityRules = ClassificationPolicyWorkerAbilityRules.DeserializeClassificationPolicyWorkerAbilityRules(property.Value);
                    continue;
                }
                if (property.NameEquals("prioritizationRules"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        prioritizationRules = null;
                        continue;
                    }
                    prioritizationRules = ClassificationPolicyPrioritizationRules.DeserializeClassificationPolicyPrioritizationRules(property.Value);
                    continue;
                }
            }
            return new ClassificationPolicy(id.Value, name.Value, defaultQueueId.Value, queueSelectionRules.Value, workerAbilityRules.Value, prioritizationRules.Value);
        }
    }
}
