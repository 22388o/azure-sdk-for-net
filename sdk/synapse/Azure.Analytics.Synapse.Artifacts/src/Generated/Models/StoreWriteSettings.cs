// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    /// <summary> Connector write settings. </summary>
    public partial class StoreWriteSettings
    {
        /// <summary> Initializes a new instance of StoreWriteSettings. </summary>
        public StoreWriteSettings()
        {
            AdditionalProperties = new ChangeTrackingDictionary<string, BinaryData>();
        }

        /// <summary> Initializes a new instance of StoreWriteSettings. </summary>
        /// <param name="type"> The write setting type. </param>
        /// <param name="maxConcurrentConnections"> The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer). </param>
        /// <param name="copyBehavior"> The type of copy behavior for copy sink. </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        internal StoreWriteSettings(string type, BinaryData maxConcurrentConnections, BinaryData copyBehavior, IDictionary<string, BinaryData> additionalProperties)
        {
            Type = type;
            MaxConcurrentConnections = maxConcurrentConnections;
            CopyBehavior = copyBehavior;
            AdditionalProperties = additionalProperties;
        }

        /// <summary> The write setting type. </summary>
        internal string Type { get; set; }
        /// <summary> The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer). </summary>
        public BinaryData MaxConcurrentConnections { get; set; }
        /// <summary> The type of copy behavior for copy sink. </summary>
        public BinaryData CopyBehavior { get; set; }
        /// <summary> Additional Properties. </summary>
        public IDictionary<string, BinaryData> AdditionalProperties { get; }
    }
}
