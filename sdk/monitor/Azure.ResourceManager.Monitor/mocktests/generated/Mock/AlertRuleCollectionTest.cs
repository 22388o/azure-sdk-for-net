//// Copyright (c) Microsoft Corporation. All rights reserved.
//// Licensed under the MIT License.

//// <auto-generated/>

//#nullable disable

//using System;
//using System.Collections.Generic;
//using System.Net;
//using System.Threading.Tasks;
//using Azure.Core;
//using Azure.Core.TestFramework;
//using Azure.ResourceManager.Monitor;
//using Azure.ResourceManager.Monitor.Models;
//using Azure.ResourceManager.TestFramework;

//namespace Azure.ResourceManager.Monitor.Tests.Mock
//{
//    /// <summary> Test for AlertRule. </summary>
//    public partial class AlertRuleCollectionMockTests : MockTestBase
//    {
//        public AlertRuleCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
//        {
//            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
//            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
//        }

//        [RecordedTest]
//        public async Task CreateOrUpdate()
//        {
//            // Example: Create or update an alert rule
//            string ruleName = "chiricutin";
//            Monitor.AlertRuleData parameters = new Monitor.AlertRuleData(location: "West US", namePropertiesName: "chiricutin", isEnabled: true, condition: new Monitor.Models.ThresholdRuleCondition(operator: Monitor.Models.ConditionOperator.GreaterThan,threshold: 3)
//{
//                WindowSize = TimeSpan.Parse("PT5M"), TimeAggregation = Monitor.Models.TimeAggregationOperator.Total, OdataType = "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition", DataSource = new Monitor.Models.RuleMetricDataSource()
//                {
//                    MetricName = "Requests",
//                    OdataType = "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
//                    ResourceUri = "/subscriptions/b67f7fec-69fc-4974-9099-a26bd6ffeda3/resourceGroups/Rac46PostSwapRG/providers/Microsoft.Web/sites/leoalerttest",
//                }, })
//{
//                Description = "Pura Vida", };
//            parameters.Tags.ReplaceWith(new Dictionary<string, string>()
//            {
//            });

//            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/Rac46PostSwapRG")).GetAlertRules();
//            await collection.CreateOrUpdateAsync(true, ruleName, parameters);
//        }

//        [RecordedTest]
//        public async Task Get()
//        {
//            // Example: Get an alert rule
//            string ruleName = "chiricutin";

//            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/Rac46PostSwapRG")).GetAlertRules();
//            await collection.GetAsync(ruleName);
//        }

//        [RecordedTest]
//        public async Task GetAll()
//        {
//            // Example: List alert rules

//            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/Rac46PostSwapRG")).GetAlertRules();
//            await foreach (var _ in collection.GetAllAsync())
//            {
//            }
//        }
//    }
//}
