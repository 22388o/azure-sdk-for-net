// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Monitor;
using Azure.ResourceManager.Monitor.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Monitor.Tests.Mock
{
    /// <summary> Test for DataCollectionEndpoint. </summary>
    public partial class DataCollectionEndpointMockTests : MockTestBase
    {
        public DataCollectionEndpointMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get data collection endpoint
            var dataCollectionEndpointId = Monitor.DataCollectionEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myCollectionEndpoint");
            var dataCollectionEndpoint = GetArmClient().GetDataCollectionEndpoint(dataCollectionEndpointId);

            await dataCollectionEndpoint.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete data collection endpoint
            var dataCollectionEndpointId = Monitor.DataCollectionEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myCollectionEndpoint");
            var dataCollectionEndpoint = GetArmClient().GetDataCollectionEndpoint(dataCollectionEndpointId);

            await dataCollectionEndpoint.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update data collection endpoint
            var dataCollectionEndpointId = Monitor.DataCollectionEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myCollectionEndpoint");
            var dataCollectionEndpoint = GetArmClient().GetDataCollectionEndpoint(dataCollectionEndpointId);
            Monitor.Models.ResourceForUpdate body = new Monitor.Models.ResourceForUpdate();

            await dataCollectionEndpoint.UpdateAsync(body);
        }
    }
}
