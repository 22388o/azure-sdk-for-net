// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Monitor;
using Azure.ResourceManager.Monitor.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Monitor.Tests.Mock
{
    /// <summary> Test for AutoscaleSetting. </summary>
    public partial class AutoscaleSettingMockTests : MockTestBase
    {
        public AutoscaleSettingMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get an autoscale setting
            var autoscaleSettingId = Monitor.AutoscaleSetting.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestingMetricsScaleSet", "MySetting");
            var autoscaleSetting = GetArmClient().GetAutoscaleSetting(autoscaleSettingId);

            await autoscaleSetting.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete an autoscale setting
            var autoscaleSettingId = Monitor.AutoscaleSetting.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestingMetricsScaleSet", "MySetting");
            var autoscaleSetting = GetArmClient().GetAutoscaleSetting(autoscaleSettingId);

            await autoscaleSetting.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Patch an autoscale setting
            var autoscaleSettingId = Monitor.AutoscaleSetting.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestingMetricsScaleSet", "MySetting");
            var autoscaleSetting = GetArmClient().GetAutoscaleSetting(autoscaleSettingId);
            Monitor.Models.AutoscaleSettingResourcePatch autoscaleSettingResource = new Monitor.Models.AutoscaleSettingResourcePatch()
            {
                Enabled = true,
                TargetResourceUri = "/subscriptions/b67f7fec-69fc-4974-9099-a26bd6ffeda3/resourceGroups/TestingMetricsScaleSet/providers/Microsoft.Compute/virtualMachineScaleSets/testingsc",
            };

            await autoscaleSetting.UpdateAsync(autoscaleSettingResource);
        }
    }
}
