// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Monitor;
using Azure.ResourceManager.Monitor.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Monitor.Tests.Mock
{
    /// <summary> Test for ActionGroup. </summary>
    public partial class ActionGroupMockTests : MockTestBase
    {
        public ActionGroupMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get an action group
            var actionGroupId = Monitor.ActionGroup.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default-NotificationRules", "SampleActionGroup");
            var actionGroup = GetArmClient().GetActionGroup(actionGroupId);

            await actionGroup.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete an action group
            var actionGroupId = Monitor.ActionGroup.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default-NotificationRules", "SampleActionGroup");
            var actionGroup = GetArmClient().GetActionGroup(actionGroupId);

            await actionGroup.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Patch an action group
            var actionGroupId = Monitor.ActionGroup.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default-NotificationRules", "SampleActionGroup");
            var actionGroup = GetArmClient().GetActionGroup(actionGroupId);
            Monitor.Models.ActionGroupPatchBody actionGroupPatch = new Monitor.Models.ActionGroupPatchBody()
            {
                Enabled = false,
            };

            await actionGroup.UpdateAsync(actionGroupPatch);
        }

        [RecordedTest]
        public async Task EnableReceiver()
        {
            // Example: Enable the receiver
            var actionGroupId = Monitor.ActionGroup.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default-NotificationRules", "SampleActionGroup");
            var actionGroup = GetArmClient().GetActionGroup(actionGroupId);
            Monitor.Models.EnableRequest enableRequest = new Monitor.Models.EnableRequest(receiverName: "John Doe's mobile");

            await actionGroup.EnableReceiverAsync(enableRequest);
        }
    }
}
