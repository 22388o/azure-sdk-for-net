//// Copyright (c) Microsoft Corporation. All rights reserved.
//// Licensed under the MIT License.

//// <auto-generated/>

//#nullable disable

//using System;
//using System.Collections.Generic;
//using System.Net;
//using System.Threading.Tasks;
//using Azure.Core.TestFramework;
//using Azure.ResourceManager.Monitor;
//using Azure.ResourceManager.Monitor.Models;
//using Azure.ResourceManager.TestFramework;

//namespace Azure.ResourceManager.Monitor.Tests.Mock
//{
//    /// <summary> Test for AlertRule. </summary>
//    public partial class AlertRuleMockTests : MockTestBase
//    {
//        public AlertRuleMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
//        {
//            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
//            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
//        }

//        [RecordedTest]
//        public async Task Get()
//        {
//            // Example: Get an alert rule
//            var alertRuleId = Monitor.AlertRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Rac46PostSwapRG", "chiricutin");
//            var alertRule = GetArmClient().GetAlertRule(alertRuleId);

//            await alertRule.GetAsync();
//        }

//        [RecordedTest]
//        public async Task Delete()
//        {
//            // Example: Delete an alert rule
//            var alertRuleId = Monitor.AlertRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Rac46PostSwapRG", "chiricutin");
//            var alertRule = GetArmClient().GetAlertRule(alertRuleId);

//            await alertRule.DeleteAsync(true);
//        }

//        [RecordedTest]
//        public async Task Update()
//        {
//            // Example: Patch an alert rule
//            var alertRuleId = Monitor.AlertRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Rac46PostSwapRG", "chiricutin");
//            var alertRule = GetArmClient().GetAlertRule(alertRuleId);
//            Monitor.Models.AlertRuleResourcePatch alertRulesResource = new Monitor.Models.AlertRuleResourcePatch()
//            {
//                Name = "chiricutin",
//                Description = "Pura Vida",
//                IsEnabled = true,
//                Condition = new Monitor.Models.ThresholdRuleCondition(operator: Monitor.Models.ConditionOperator.GreaterThan,threshold: 3)
//{
//                WindowSize = TimeSpan.Parse("PT5M"), TimeAggregation = Monitor.Models.TimeAggregationOperator.Total, OdataType = "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition", DataSource = new Monitor.Models.RuleMetricDataSource()
//                {
//                    MetricName = "Requests",
//                    OdataType = "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
//                    ResourceUri = "/subscriptions/b67f7fec-69fc-4974-9099-a26bd6ffeda3/resourceGroups/Rac46PostSwapRG/providers/Microsoft.Web/sites/leoalerttest",
//                }, }, };

//        await alertRule.UpdateAsync(alertRulesResource);
//    }

//    [RecordedTest]
//    public async Task GetAlertRuleIncident()
//    {
//        // Example: Get a single alert rule incident
//        var alertRuleId = Monitor.AlertRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Rac46PostSwapRG", "myRuleName");
//        var alertRule = GetArmClient().GetAlertRule(alertRuleId);
//        string incidentName = "Website_started";

//        await alertRule.GetAlertRuleIncidentAsync(incidentName);
//    }

//    [RecordedTest]
//    public async Task GetAlertRuleIncidents()
//    {
//        // Example: List alert rule incidents
//        var alertRuleId = Monitor.AlertRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Rac46PostSwapRG", "myRuleName");
//        var alertRule = GetArmClient().GetAlertRule(alertRuleId);

//        await foreach (var _ in alertRule.GetAlertRuleIncidentsAsync())
//        {
//        }
//    }
//}
//}
