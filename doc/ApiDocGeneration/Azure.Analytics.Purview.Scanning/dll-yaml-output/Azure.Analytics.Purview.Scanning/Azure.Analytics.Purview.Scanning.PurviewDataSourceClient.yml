### YamlMime:ManagedReference
items:
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  commentId: T:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  id: PurviewDataSourceClient
  children:
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential)
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions)
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdate(Azure.Core.RequestContent,Azure.RequestContext)
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdateAsync(Azure.Core.RequestContent,Azure.RequestContext)
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Delete(Azure.RequestContext)
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.DeleteAsync(Azure.RequestContext)
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetProperties(Azure.RequestContext)
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetPropertiesAsync(Azure.RequestContext)
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScanClient(System.String)
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScans(Azure.RequestContext)
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScansAsync(Azure.RequestContext)
  - Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Pipeline
  langs:
  - csharp
  - fsharp
  - vb
  name: PurviewDataSourceClient
  nameWithType: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  type: Class
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: The PurviewDataSource service client.
  syntax:
    content: public class PurviewDataSourceClient
    content.csharp: public class PurviewDataSourceClient
    content.fsharp: type PurviewDataSourceClient = class
    content.vb: Public Class PurviewDataSourceClient
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  modifiers.csharp:
  - public
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor
  id: '#ctor'
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - vb
  name: PurviewDataSourceClient()
  nameWithType: PurviewDataSourceClient.PurviewDataSourceClient()
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.PurviewDataSourceClient()
  type: Constructor
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: Initializes a new instance of PurviewDataSourceClient for mocking.
  syntax:
    content: protected PurviewDataSourceClient ();
    parameters: []
    content.csharp: protected PurviewDataSourceClient ();
    content.vb: Protected Sub New ()
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor*
  exceptions: []
  modifiers.csharp:
  - protected
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential)
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential)
  id: '#ctor(System.Uri,System.String,Azure.Core.TokenCredential)'
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - fsharp
  - vb
  name: PurviewDataSourceClient(Uri, String, TokenCredential)
  nameWithType: PurviewDataSourceClient.PurviewDataSourceClient(Uri, String, TokenCredential)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.PurviewDataSourceClient(Uri, String, TokenCredential)
  type: Constructor
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: Initializes a new instance of PurviewDataSourceClient.
  syntax:
    content: public PurviewDataSourceClient (Uri endpoint, string dataSourceName, Azure.Core.TokenCredential credential);
    parameters:
    - id: endpoint
      type: System.Uri
      description: 'The scanning endpoint of your purview account. Example: https://{accountName}.scan.purview.azure.com.'
    - id: dataSourceName
      type: System.String
      description: The String to use.
    - id: credential
      type: Azure.Core.TokenCredential
      description: A credential used to authenticate to an Azure Service.
    content.csharp: public PurviewDataSourceClient (Uri endpoint, string dataSourceName, Azure.Core.TokenCredential credential);
    content.fsharp: 'new Azure.Analytics.Purview.Scanning.PurviewDataSourceClient : Uri * string * Azure.Core.TokenCredential -> Azure.Analytics.Purview.Scanning.PurviewDataSourceClient'
    content.vb: Public Sub New (endpoint As Uri, dataSourceName As String, credential As TokenCredential)
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref">endpoint</code>, <code data-dev-comment-type="paramref">dataSourceName</code> or <code data-dev-comment-type="paramref">credential</code> is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code data-dev-comment-type="paramref">dataSourceName</code> is an empty string, and was expected to be non-empty.
  modifiers.csharp:
  - public
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions)
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions)
  id: '#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions)'
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - fsharp
  - vb
  name: PurviewDataSourceClient(Uri, String, TokenCredential, PurviewScanningServiceClientOptions)
  nameWithType: PurviewDataSourceClient.PurviewDataSourceClient(Uri, String, TokenCredential, PurviewScanningServiceClientOptions)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.PurviewDataSourceClient(Uri, String, TokenCredential, PurviewScanningServiceClientOptions)
  type: Constructor
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: Initializes a new instance of PurviewDataSourceClient.
  syntax:
    content: public PurviewDataSourceClient (Uri endpoint, string dataSourceName, Azure.Core.TokenCredential credential, Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions options);
    parameters:
    - id: endpoint
      type: System.Uri
      description: 'The scanning endpoint of your purview account. Example: https://{accountName}.scan.purview.azure.com.'
    - id: dataSourceName
      type: System.String
      description: The String to use.
    - id: credential
      type: Azure.Core.TokenCredential
      description: A credential used to authenticate to an Azure Service.
    - id: options
      type: Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions
      description: The options for configuring the client.
    content.csharp: public PurviewDataSourceClient (Uri endpoint, string dataSourceName, Azure.Core.TokenCredential credential, Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions options);
    content.fsharp: 'new Azure.Analytics.Purview.Scanning.PurviewDataSourceClient : Uri * string * Azure.Core.TokenCredential * Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions -> Azure.Analytics.Purview.Scanning.PurviewDataSourceClient'
    content.vb: Public Sub New (endpoint As Uri, dataSourceName As String, credential As TokenCredential, options As PurviewScanningServiceClientOptions)
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref">endpoint</code>, <code data-dev-comment-type="paramref">dataSourceName</code> or <code data-dev-comment-type="paramref">credential</code> is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code data-dev-comment-type="paramref">dataSourceName</code> is an empty string, and was expected to be non-empty.
  modifiers.csharp:
  - public
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdate(Azure.Core.RequestContent,Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdate(Azure.Core.RequestContent,Azure.RequestContext)
  id: CreateOrUpdate(Azure.Core.RequestContent,Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - fsharp
  - vb
  name: CreateOrUpdate(RequestContent, RequestContext)
  nameWithType: PurviewDataSourceClient.CreateOrUpdate(RequestContent, RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdate(RequestContent, RequestContext)
  type: Method
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: Creates or Updates a data source.
  remarks: >-
    Schema for <code data-dev-comment-type="c">Request Body</code>:

    <pre><code>{
      id: string,
      name: string,
      kind: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI" (required),
      scans: [
        {
          id: string,
          name: string,
          kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi" (required),
          scanResults: [
            {
              parentId: string,
              id: string,
              resourceId: string,
              status: string,
              assetsDiscovered: number,
              assetsClassified: number,
              diagnostics: {
                notifications: [
                  {
                    message: string,
                    code: number
                  }
                ],
                exceptionCountMap: Dictionary&lt;string, number&gt;
              },
              startTime: string (ISO 8601 Format),
              queuedTime: string (ISO 8601 Format),
              pipelineStartTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              scanRulesetVersion: number,
              scanRulesetType: "Custom" | "System",
              scanLevelType: "Full" | "Incremental",
              errorMessage: string,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              },
              runType: string,
              dataSourceType: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
          ]
        }
      ]
    }

    </code></pre>

    Schema for <code data-dev-comment-type="c">Response Body</code>:

    <pre><code>{
      id: string,
      name: string,
      kind: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI",
      scans: [
        {
          id: string,
          name: string,
          kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi",
          scanResults: [
            {
              parentId: string,
              id: string,
              resourceId: string,
              status: string,
              assetsDiscovered: number,
              assetsClassified: number,
              diagnostics: {
                notifications: [
                  {
                    message: string,
                    code: number
                  }
                ],
                exceptionCountMap: Dictionary&lt;string, number&gt;
              },
              startTime: string (ISO 8601 Format),
              queuedTime: string (ISO 8601 Format),
              pipelineStartTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              scanRulesetVersion: number,
              scanRulesetType: "Custom" | "System",
              scanLevelType: "Full" | "Incremental",
              errorMessage: string,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              },
              runType: string,
              dataSourceType: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
          ]
        }
      ]
    }

    </code></pre>

    Schema for <code data-dev-comment-type="c">Response Error</code>:

    <pre><code>{
      error: {
        code: string,
        message: string,
        target: string,
        details: [
          {
            code: string,
            message: string,
            target: string,
            details: [ErrorModel]
          }
        ]
      }
    }

    </code></pre>
  syntax:
    content: public virtual Azure.Response CreateOrUpdate (Azure.Core.RequestContent content, Azure.RequestContext context = null);
    parameters:
    - id: content
      type: Azure.Core.RequestContent
      description: The content to send as the body of the request.
    - id: context
      type: Azure.RequestContext
      description: The request context, which can override default behaviors on the request on a per-call basis.
    return:
      type: Azure.Response
      description: ''
    content.csharp: public virtual Azure.Response CreateOrUpdate (Azure.Core.RequestContent content, Azure.RequestContext context = null);
    content.fsharp: >-
      abstract member CreateOrUpdate : Azure.Core.RequestContent * Azure.RequestContext -> Azure.Response

      override this.CreateOrUpdate : Azure.Core.RequestContent * Azure.RequestContext -> Azure.Response
    content.vb: Public Overridable Function CreateOrUpdate (content As RequestContent, Optional context As RequestContext = null) As Response
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdate*
  exceptions: []
  modifiers.csharp:
  - public
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdateAsync(Azure.Core.RequestContent,Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdateAsync(Azure.Core.RequestContent,Azure.RequestContext)
  id: CreateOrUpdateAsync(Azure.Core.RequestContent,Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - fsharp
  - vb
  name: CreateOrUpdateAsync(RequestContent, RequestContext)
  nameWithType: PurviewDataSourceClient.CreateOrUpdateAsync(RequestContent, RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdateAsync(RequestContent, RequestContext)
  type: Method
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: Creates or Updates a data source.
  remarks: >-
    Schema for <code data-dev-comment-type="c">Request Body</code>:

    <pre><code>{
      id: string,
      name: string,
      kind: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI" (required),
      scans: [
        {
          id: string,
          name: string,
          kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi" (required),
          scanResults: [
            {
              parentId: string,
              id: string,
              resourceId: string,
              status: string,
              assetsDiscovered: number,
              assetsClassified: number,
              diagnostics: {
                notifications: [
                  {
                    message: string,
                    code: number
                  }
                ],
                exceptionCountMap: Dictionary&lt;string, number&gt;
              },
              startTime: string (ISO 8601 Format),
              queuedTime: string (ISO 8601 Format),
              pipelineStartTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              scanRulesetVersion: number,
              scanRulesetType: "Custom" | "System",
              scanLevelType: "Full" | "Incremental",
              errorMessage: string,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              },
              runType: string,
              dataSourceType: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
          ]
        }
      ]
    }

    </code></pre>

    Schema for <code data-dev-comment-type="c">Response Body</code>:

    <pre><code>{
      id: string,
      name: string,
      kind: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI",
      scans: [
        {
          id: string,
          name: string,
          kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi",
          scanResults: [
            {
              parentId: string,
              id: string,
              resourceId: string,
              status: string,
              assetsDiscovered: number,
              assetsClassified: number,
              diagnostics: {
                notifications: [
                  {
                    message: string,
                    code: number
                  }
                ],
                exceptionCountMap: Dictionary&lt;string, number&gt;
              },
              startTime: string (ISO 8601 Format),
              queuedTime: string (ISO 8601 Format),
              pipelineStartTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              scanRulesetVersion: number,
              scanRulesetType: "Custom" | "System",
              scanLevelType: "Full" | "Incremental",
              errorMessage: string,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              },
              runType: string,
              dataSourceType: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
          ]
        }
      ]
    }

    </code></pre>

    Schema for <code data-dev-comment-type="c">Response Error</code>:

    <pre><code>{
      error: {
        code: string,
        message: string,
        target: string,
        details: [
          {
            code: string,
            message: string,
            target: string,
            details: [ErrorModel]
          }
        ]
      }
    }

    </code></pre>
  syntax:
    content: >-
      [System.Diagnostics.DebuggerStepThrough]

      public virtual System.Threading.Tasks.Task<Azure.Response> CreateOrUpdateAsync (Azure.Core.RequestContent content, Azure.RequestContext context = null);
    parameters:
    - id: content
      type: Azure.Core.RequestContent
      description: The content to send as the body of the request.
    - id: context
      type: Azure.RequestContext
      description: The request context, which can override default behaviors on the request on a per-call basis.
    return:
      type: System.Threading.Tasks.Task{Azure.Response}
      description: ''
    content.csharp: >-
      [System.Diagnostics.DebuggerStepThrough]

      public virtual System.Threading.Tasks.Task<Azure.Response> CreateOrUpdateAsync (Azure.Core.RequestContent content, Azure.RequestContext context = null);
    content.fsharp: >-
      abstract member CreateOrUpdateAsync : Azure.Core.RequestContent * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

      override this.CreateOrUpdateAsync : Azure.Core.RequestContent * Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
    content.vb: Public Overridable Function CreateOrUpdateAsync (content As RequestContent, Optional context As RequestContext = null) As Task(Of Response)
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdateAsync*
  exceptions: []
  attributes:
  - type: System.Diagnostics.DebuggerStepThroughAttribute
  modifiers.csharp:
  - public
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Delete(Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Delete(Azure.RequestContext)
  id: Delete(Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - fsharp
  - vb
  name: Delete(RequestContext)
  nameWithType: PurviewDataSourceClient.Delete(RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Delete(RequestContext)
  type: Method
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: Deletes a data source.
  remarks: >-
    Schema for <code data-dev-comment-type="c">Response Body</code>:

    <pre><code>{
      id: string,
      name: string,
      kind: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI",
      scans: [
        {
          id: string,
          name: string,
          kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi",
          scanResults: [
            {
              parentId: string,
              id: string,
              resourceId: string,
              status: string,
              assetsDiscovered: number,
              assetsClassified: number,
              diagnostics: {
                notifications: [
                  {
                    message: string,
                    code: number
                  }
                ],
                exceptionCountMap: Dictionary&lt;string, number&gt;
              },
              startTime: string (ISO 8601 Format),
              queuedTime: string (ISO 8601 Format),
              pipelineStartTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              scanRulesetVersion: number,
              scanRulesetType: "Custom" | "System",
              scanLevelType: "Full" | "Incremental",
              errorMessage: string,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              },
              runType: string,
              dataSourceType: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
          ]
        }
      ]
    }

    </code></pre>

    Schema for <code data-dev-comment-type="c">Response Error</code>:

    <pre><code>{
      error: {
        code: string,
        message: string,
        target: string,
        details: [
          {
            code: string,
            message: string,
            target: string,
            details: [ErrorModel]
          }
        ]
      }
    }

    </code></pre>
  syntax:
    content: public virtual Azure.Response Delete (Azure.RequestContext context = null);
    parameters:
    - id: context
      type: Azure.RequestContext
      description: The request context, which can override default behaviors on the request on a per-call basis.
    return:
      type: Azure.Response
      description: ''
    content.csharp: public virtual Azure.Response Delete (Azure.RequestContext context = null);
    content.fsharp: >-
      abstract member Delete : Azure.RequestContext -> Azure.Response

      override this.Delete : Azure.RequestContext -> Azure.Response
    content.vb: Public Overridable Function Delete (Optional context As RequestContext = null) As Response
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Delete*
  exceptions: []
  modifiers.csharp:
  - public
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.DeleteAsync(Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.DeleteAsync(Azure.RequestContext)
  id: DeleteAsync(Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - fsharp
  - vb
  name: DeleteAsync(RequestContext)
  nameWithType: PurviewDataSourceClient.DeleteAsync(RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.DeleteAsync(RequestContext)
  type: Method
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: Deletes a data source.
  remarks: >-
    Schema for <code data-dev-comment-type="c">Response Body</code>:

    <pre><code>{
      id: string,
      name: string,
      kind: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI",
      scans: [
        {
          id: string,
          name: string,
          kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi",
          scanResults: [
            {
              parentId: string,
              id: string,
              resourceId: string,
              status: string,
              assetsDiscovered: number,
              assetsClassified: number,
              diagnostics: {
                notifications: [
                  {
                    message: string,
                    code: number
                  }
                ],
                exceptionCountMap: Dictionary&lt;string, number&gt;
              },
              startTime: string (ISO 8601 Format),
              queuedTime: string (ISO 8601 Format),
              pipelineStartTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              scanRulesetVersion: number,
              scanRulesetType: "Custom" | "System",
              scanLevelType: "Full" | "Incremental",
              errorMessage: string,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              },
              runType: string,
              dataSourceType: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
          ]
        }
      ]
    }

    </code></pre>

    Schema for <code data-dev-comment-type="c">Response Error</code>:

    <pre><code>{
      error: {
        code: string,
        message: string,
        target: string,
        details: [
          {
            code: string,
            message: string,
            target: string,
            details: [ErrorModel]
          }
        ]
      }
    }

    </code></pre>
  syntax:
    content: >-
      [System.Diagnostics.DebuggerStepThrough]

      public virtual System.Threading.Tasks.Task<Azure.Response> DeleteAsync (Azure.RequestContext context = null);
    parameters:
    - id: context
      type: Azure.RequestContext
      description: The request context, which can override default behaviors on the request on a per-call basis.
    return:
      type: System.Threading.Tasks.Task{Azure.Response}
      description: ''
    content.csharp: >-
      [System.Diagnostics.DebuggerStepThrough]

      public virtual System.Threading.Tasks.Task<Azure.Response> DeleteAsync (Azure.RequestContext context = null);
    content.fsharp: >-
      abstract member DeleteAsync : Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

      override this.DeleteAsync : Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
    content.vb: Public Overridable Function DeleteAsync (Optional context As RequestContext = null) As Task(Of Response)
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.DeleteAsync*
  exceptions: []
  attributes:
  - type: System.Diagnostics.DebuggerStepThroughAttribute
  modifiers.csharp:
  - public
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetProperties(Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetProperties(Azure.RequestContext)
  id: GetProperties(Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - fsharp
  - vb
  name: GetProperties(RequestContext)
  nameWithType: PurviewDataSourceClient.GetProperties(RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetProperties(RequestContext)
  type: Method
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: Get a data source.
  remarks: >-
    Schema for <code data-dev-comment-type="c">Response Body</code>:

    <pre><code>{
      id: string,
      name: string,
      kind: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI",
      scans: [
        {
          id: string,
          name: string,
          kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi",
          scanResults: [
            {
              parentId: string,
              id: string,
              resourceId: string,
              status: string,
              assetsDiscovered: number,
              assetsClassified: number,
              diagnostics: {
                notifications: [
                  {
                    message: string,
                    code: number
                  }
                ],
                exceptionCountMap: Dictionary&lt;string, number&gt;
              },
              startTime: string (ISO 8601 Format),
              queuedTime: string (ISO 8601 Format),
              pipelineStartTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              scanRulesetVersion: number,
              scanRulesetType: "Custom" | "System",
              scanLevelType: "Full" | "Incremental",
              errorMessage: string,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              },
              runType: string,
              dataSourceType: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
          ]
        }
      ]
    }

    </code></pre>

    Schema for <code data-dev-comment-type="c">Response Error</code>:

    <pre><code>{
      error: {
        code: string,
        message: string,
        target: string,
        details: [
          {
            code: string,
            message: string,
            target: string,
            details: [ErrorModel]
          }
        ]
      }
    }

    </code></pre>
  syntax:
    content: public virtual Azure.Response GetProperties (Azure.RequestContext context = null);
    parameters:
    - id: context
      type: Azure.RequestContext
      description: The request context, which can override default behaviors on the request on a per-call basis.
    return:
      type: Azure.Response
      description: ''
    content.csharp: public virtual Azure.Response GetProperties (Azure.RequestContext context = null);
    content.fsharp: >-
      abstract member GetProperties : Azure.RequestContext -> Azure.Response

      override this.GetProperties : Azure.RequestContext -> Azure.Response
    content.vb: Public Overridable Function GetProperties (Optional context As RequestContext = null) As Response
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetProperties*
  exceptions: []
  modifiers.csharp:
  - public
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetPropertiesAsync(Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetPropertiesAsync(Azure.RequestContext)
  id: GetPropertiesAsync(Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - fsharp
  - vb
  name: GetPropertiesAsync(RequestContext)
  nameWithType: PurviewDataSourceClient.GetPropertiesAsync(RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetPropertiesAsync(RequestContext)
  type: Method
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: Get a data source.
  remarks: >-
    Schema for <code data-dev-comment-type="c">Response Body</code>:

    <pre><code>{
      id: string,
      name: string,
      kind: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI",
      scans: [
        {
          id: string,
          name: string,
          kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi",
          scanResults: [
            {
              parentId: string,
              id: string,
              resourceId: string,
              status: string,
              assetsDiscovered: number,
              assetsClassified: number,
              diagnostics: {
                notifications: [
                  {
                    message: string,
                    code: number
                  }
                ],
                exceptionCountMap: Dictionary&lt;string, number&gt;
              },
              startTime: string (ISO 8601 Format),
              queuedTime: string (ISO 8601 Format),
              pipelineStartTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              scanRulesetVersion: number,
              scanRulesetType: "Custom" | "System",
              scanLevelType: "Full" | "Incremental",
              errorMessage: string,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              },
              runType: string,
              dataSourceType: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
          ]
        }
      ]
    }

    </code></pre>

    Schema for <code data-dev-comment-type="c">Response Error</code>:

    <pre><code>{
      error: {
        code: string,
        message: string,
        target: string,
        details: [
          {
            code: string,
            message: string,
            target: string,
            details: [ErrorModel]
          }
        ]
      }
    }

    </code></pre>
  syntax:
    content: >-
      [System.Diagnostics.DebuggerStepThrough]

      public virtual System.Threading.Tasks.Task<Azure.Response> GetPropertiesAsync (Azure.RequestContext context = null);
    parameters:
    - id: context
      type: Azure.RequestContext
      description: The request context, which can override default behaviors on the request on a per-call basis.
    return:
      type: System.Threading.Tasks.Task{Azure.Response}
      description: ''
    content.csharp: >-
      [System.Diagnostics.DebuggerStepThrough]

      public virtual System.Threading.Tasks.Task<Azure.Response> GetPropertiesAsync (Azure.RequestContext context = null);
    content.fsharp: >-
      abstract member GetPropertiesAsync : Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>

      override this.GetPropertiesAsync : Azure.RequestContext -> System.Threading.Tasks.Task<Azure.Response>
    content.vb: Public Overridable Function GetPropertiesAsync (Optional context As RequestContext = null) As Task(Of Response)
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetPropertiesAsync*
  exceptions: []
  attributes:
  - type: System.Diagnostics.DebuggerStepThroughAttribute
  modifiers.csharp:
  - public
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScanClient(System.String)
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScanClient(System.String)
  id: GetScanClient(System.String)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - fsharp
  - vb
  name: GetScanClient(String)
  nameWithType: PurviewDataSourceClient.GetScanClient(String)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScanClient(String)
  type: Method
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  syntax:
    content: public virtual Azure.Analytics.Purview.Scanning.PurviewScanClient GetScanClient (string scanName);
    parameters:
    - id: scanName
      type: System.String
      description: ''
    return:
      type: Azure.Analytics.Purview.Scanning.PurviewScanClient
      description: ''
    content.csharp: public virtual Azure.Analytics.Purview.Scanning.PurviewScanClient GetScanClient (string scanName);
    content.fsharp: >-
      abstract member GetScanClient : string -> Azure.Analytics.Purview.Scanning.PurviewScanClient

      override this.GetScanClient : string -> Azure.Analytics.Purview.Scanning.PurviewScanClient
    content.vb: Public Overridable Function GetScanClient (scanName As String) As PurviewScanClient
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScanClient*
  exceptions: []
  modifiers.csharp:
  - public
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScans(Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScans(Azure.RequestContext)
  id: GetScans(Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - fsharp
  - vb
  name: GetScans(RequestContext)
  nameWithType: PurviewDataSourceClient.GetScans(RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScans(RequestContext)
  type: Method
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: List scans in data source.
  remarks: >-
    Schema for <code data-dev-comment-type="c">Response Body</code>:

    <pre><code>{
      value: [
        {
          id: string,
          name: string,
          kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi",
          scanResults: [
            {
              parentId: string,
              id: string,
              resourceId: string,
              status: string,
              assetsDiscovered: number,
              assetsClassified: number,
              diagnostics: {
                notifications: [
                  {
                    message: string,
                    code: number
                  }
                ],
                exceptionCountMap: Dictionary&lt;string, number&gt;
              },
              startTime: string (ISO 8601 Format),
              queuedTime: string (ISO 8601 Format),
              pipelineStartTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              scanRulesetVersion: number,
              scanRulesetType: "Custom" | "System",
              scanLevelType: "Full" | "Incremental",
              errorMessage: string,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              },
              runType: string,
              dataSourceType: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
          ]
        }
      ],
      nextLink: string,
      count: number
    }

    </code></pre>

    Schema for <code data-dev-comment-type="c">Response Error</code>:

    <pre><code>{
      error: {
        code: string,
        message: string,
        target: string,
        details: [
          {
            code: string,
            message: string,
            target: string,
            details: [ErrorModel]
          }
        ]
      }
    }

    </code></pre>
  syntax:
    content: public virtual Azure.Pageable<BinaryData> GetScans (Azure.RequestContext context = null);
    parameters:
    - id: context
      type: Azure.RequestContext
      description: The request context, which can override default behaviors on the request on a per-call basis.
    return:
      type: Azure.Pageable{System.BinaryData}
      description: ''
    content.csharp: public virtual Azure.Pageable<BinaryData> GetScans (Azure.RequestContext context = null);
    content.fsharp: >-
      abstract member GetScans : Azure.RequestContext -> Azure.Pageable<BinaryData>

      override this.GetScans : Azure.RequestContext -> Azure.Pageable<BinaryData>
    content.vb: Public Overridable Function GetScans (Optional context As RequestContext = null) As Pageable(Of BinaryData)
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScans*
  exceptions: []
  modifiers.csharp:
  - public
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScansAsync(Azure.RequestContext)
  commentId: M:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScansAsync(Azure.RequestContext)
  id: GetScansAsync(Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - fsharp
  - vb
  name: GetScansAsync(RequestContext)
  nameWithType: PurviewDataSourceClient.GetScansAsync(RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScansAsync(RequestContext)
  type: Method
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: List scans in data source.
  remarks: >-
    Schema for <code data-dev-comment-type="c">Response Body</code>:

    <pre><code>{
      value: [
        {
          id: string,
          name: string,
          kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi",
          scanResults: [
            {
              parentId: string,
              id: string,
              resourceId: string,
              status: string,
              assetsDiscovered: number,
              assetsClassified: number,
              diagnostics: {
                notifications: [
                  {
                    message: string,
                    code: number
                  }
                ],
                exceptionCountMap: Dictionary&lt;string, number&gt;
              },
              startTime: string (ISO 8601 Format),
              queuedTime: string (ISO 8601 Format),
              pipelineStartTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              scanRulesetVersion: number,
              scanRulesetType: "Custom" | "System",
              scanLevelType: "Full" | "Incremental",
              errorMessage: string,
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              },
              runType: string,
              dataSourceType: "None" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
          ]
        }
      ],
      nextLink: string,
      count: number
    }

    </code></pre>

    Schema for <code data-dev-comment-type="c">Response Error</code>:

    <pre><code>{
      error: {
        code: string,
        message: string,
        target: string,
        details: [
          {
            code: string,
            message: string,
            target: string,
            details: [ErrorModel]
          }
        ]
      }
    }

    </code></pre>
  syntax:
    content: public virtual Azure.AsyncPageable<BinaryData> GetScansAsync (Azure.RequestContext context = null);
    parameters:
    - id: context
      type: Azure.RequestContext
      description: The request context, which can override default behaviors on the request on a per-call basis.
    return:
      type: Azure.AsyncPageable{System.BinaryData}
      description: ''
    content.csharp: public virtual Azure.AsyncPageable<BinaryData> GetScansAsync (Azure.RequestContext context = null);
    content.fsharp: >-
      abstract member GetScansAsync : Azure.RequestContext -> Azure.AsyncPageable<BinaryData>

      override this.GetScansAsync : Azure.RequestContext -> Azure.AsyncPageable<BinaryData>
    content.vb: Public Overridable Function GetScansAsync (Optional context As RequestContext = null) As AsyncPageable(Of BinaryData)
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScansAsync*
  exceptions: []
  modifiers.csharp:
  - public
  monikers:
  - my-api
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Pipeline
  commentId: P:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Pipeline
  id: Pipeline
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  langs:
  - csharp
  - fsharp
  - vb
  name: Pipeline
  nameWithType: PurviewDataSourceClient.Pipeline
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Pipeline
  type: Property
  assemblies:
  - Azure.Analytics.Purview.Scanning
  namespace: Azure.Analytics.Purview.Scanning
  summary: The HTTP pipeline for sending and receiving REST requests and responses.
  syntax:
    content: public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }
    return:
      type: Azure.Core.Pipeline.HttpPipeline
      description: ''
    content.csharp: public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }
    content.fsharp: 'member this.Pipeline : Azure.Core.Pipeline.HttpPipeline'
    content.vb: Public Overridable ReadOnly Property Pipeline As HttpPipeline
  overload: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Pipeline*
  exceptions: []
  modifiers.csharp:
  - public
  - get
  monikers:
  - my-api
references:
- uid: Azure.Analytics.Purview.Scanning
  commentId: N:Azure.Analytics.Purview.Scanning
  isExternal: false
  name: Azure.Analytics.Purview.Scanning
  nameWithType: Azure.Analytics.Purview.Scanning
  fullName: Azure.Analytics.Purview.Scanning
  type: namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: PurviewDataSourceClient()
  nameWithType: PurviewDataSourceClient.PurviewDataSourceClient()
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.PurviewDataSourceClient()
  type: constructor
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: PurviewDataSourceClient(Uri, String, TokenCredential)
  nameWithType: PurviewDataSourceClient.PurviewDataSourceClient(Uri, String, TokenCredential)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.PurviewDataSourceClient(Uri, String, TokenCredential)
  type: constructor
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Azure.Core.TokenCredential
  parent: Azure.Core
  isExternal: true
  name: TokenCredential
  nameWithType: TokenCredential
  fullName: Azure.Core.TokenCredential
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: PurviewDataSourceClient(Uri, String, TokenCredential, PurviewScanningServiceClientOptions)
  nameWithType: PurviewDataSourceClient.PurviewDataSourceClient(Uri, String, TokenCredential, PurviewScanningServiceClientOptions)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.PurviewDataSourceClient(Uri, String, TokenCredential, PurviewScanningServiceClientOptions)
  type: constructor
- uid: Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions
  parent: Azure.Analytics.Purview.Scanning
  isExternal: false
  name: PurviewScanningServiceClientOptions
  nameWithType: PurviewScanningServiceClientOptions
  fullName: Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdate(Azure.Core.RequestContent,Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: CreateOrUpdate(RequestContent, RequestContext)
  nameWithType: PurviewDataSourceClient.CreateOrUpdate(RequestContent, RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdate(RequestContent, RequestContext)
  type: method
- uid: Azure.Response
  parent: Azure
  isExternal: true
  name: Response
  nameWithType: Response
  fullName: Azure.Response
- uid: Azure.Core.RequestContent
  parent: Azure.Core
  isExternal: true
  name: RequestContent
  nameWithType: RequestContent
  fullName: Azure.Core.RequestContent
- uid: Azure.RequestContext
  parent: Azure
  isExternal: true
  name: RequestContext
  nameWithType: RequestContext
  fullName: Azure.RequestContext
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdateAsync(Azure.Core.RequestContent,Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: CreateOrUpdateAsync(RequestContent, RequestContext)
  nameWithType: PurviewDataSourceClient.CreateOrUpdateAsync(RequestContent, RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdateAsync(RequestContent, RequestContext)
  type: method
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task{Azure.Response}
  parent: System.Threading.Tasks
  name: Task<Response>
  nameWithType: Task<Response>
  fullName: System.Threading.Tasks.Task<Azure.Response>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: Azure.Response
    name: Response
    nameWithType: Response
    fullName: Azure.Response
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Delete(Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: Delete(RequestContext)
  nameWithType: PurviewDataSourceClient.Delete(RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Delete(RequestContext)
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.DeleteAsync(Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: DeleteAsync(RequestContext)
  nameWithType: PurviewDataSourceClient.DeleteAsync(RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.DeleteAsync(RequestContext)
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetProperties(Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: GetProperties(RequestContext)
  nameWithType: PurviewDataSourceClient.GetProperties(RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetProperties(RequestContext)
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetPropertiesAsync(Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: GetPropertiesAsync(RequestContext)
  nameWithType: PurviewDataSourceClient.GetPropertiesAsync(RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetPropertiesAsync(RequestContext)
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScanClient(System.String)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: GetScanClient(String)
  nameWithType: PurviewDataSourceClient.GetScanClient(String)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScanClient(String)
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewScanClient
  parent: Azure.Analytics.Purview.Scanning
  isExternal: false
  name: PurviewScanClient
  nameWithType: PurviewScanClient
  fullName: Azure.Analytics.Purview.Scanning.PurviewScanClient
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScans(Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: GetScans(RequestContext)
  nameWithType: PurviewDataSourceClient.GetScans(RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScans(RequestContext)
  type: method
- uid: Azure.Pageable`1
  isExternal: true
  name: Pageable
  nameWithType: Pageable
  fullName: Azure.Pageable
- uid: System.BinaryData
  isExternal: true
  name: BinaryData
  nameWithType: BinaryData
  fullName: System.BinaryData
- uid: Azure.Pageable{System.BinaryData}
  parent: Azure
  name: Pageable<BinaryData>
  nameWithType: Pageable<BinaryData>
  fullName: Azure.Pageable<System.BinaryData>
  spec.csharp:
  - uid: Azure.Pageable`1
    name: Pageable
    nameWithType: Pageable
    fullName: Azure.Pageable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.BinaryData
    name: BinaryData
    nameWithType: BinaryData
    fullName: System.BinaryData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScansAsync(Azure.RequestContext)
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: GetScansAsync(RequestContext)
  nameWithType: PurviewDataSourceClient.GetScansAsync(RequestContext)
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScansAsync(RequestContext)
  type: method
- uid: Azure.AsyncPageable`1
  isExternal: true
  name: AsyncPageable
  nameWithType: AsyncPageable
  fullName: Azure.AsyncPageable
- uid: Azure.AsyncPageable{System.BinaryData}
  parent: Azure
  name: AsyncPageable<BinaryData>
  nameWithType: AsyncPageable<BinaryData>
  fullName: Azure.AsyncPageable<System.BinaryData>
  spec.csharp:
  - uid: Azure.AsyncPageable`1
    name: AsyncPageable
    nameWithType: AsyncPageable
    fullName: Azure.AsyncPageable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.BinaryData
    name: BinaryData
    nameWithType: BinaryData
    fullName: System.BinaryData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Pipeline
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: Pipeline
  nameWithType: PurviewDataSourceClient.Pipeline
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Pipeline
  type: property
- uid: Azure.Core.Pipeline.HttpPipeline
  parent: Azure.Core.Pipeline
  isExternal: true
  name: HttpPipeline
  nameWithType: HttpPipeline
  fullName: Azure.Core.Pipeline.HttpPipeline
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor*
  commentId: Overload:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.#ctor
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: PurviewDataSourceClient
  nameWithType: PurviewDataSourceClient.PurviewDataSourceClient
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.PurviewDataSourceClient
  monikers:
  - my-api
  type: constructor
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdate*
  commentId: Overload:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdate
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: CreateOrUpdate
  nameWithType: PurviewDataSourceClient.CreateOrUpdate
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdate
  monikers:
  - my-api
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdateAsync*
  commentId: Overload:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdateAsync
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: CreateOrUpdateAsync
  nameWithType: PurviewDataSourceClient.CreateOrUpdateAsync
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.CreateOrUpdateAsync
  monikers:
  - my-api
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Delete*
  commentId: Overload:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Delete
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: Delete
  nameWithType: PurviewDataSourceClient.Delete
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Delete
  monikers:
  - my-api
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.DeleteAsync*
  commentId: Overload:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.DeleteAsync
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: DeleteAsync
  nameWithType: PurviewDataSourceClient.DeleteAsync
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.DeleteAsync
  monikers:
  - my-api
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetProperties*
  commentId: Overload:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetProperties
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: GetProperties
  nameWithType: PurviewDataSourceClient.GetProperties
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetProperties
  monikers:
  - my-api
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetPropertiesAsync*
  commentId: Overload:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetPropertiesAsync
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: GetPropertiesAsync
  nameWithType: PurviewDataSourceClient.GetPropertiesAsync
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetPropertiesAsync
  monikers:
  - my-api
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScanClient*
  commentId: Overload:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScanClient
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: GetScanClient
  nameWithType: PurviewDataSourceClient.GetScanClient
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScanClient
  monikers:
  - my-api
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScans*
  commentId: Overload:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScans
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: GetScans
  nameWithType: PurviewDataSourceClient.GetScans
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScans
  monikers:
  - my-api
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScansAsync*
  commentId: Overload:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScansAsync
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: GetScansAsync
  nameWithType: PurviewDataSourceClient.GetScansAsync
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.GetScansAsync
  monikers:
  - my-api
  type: method
- uid: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Pipeline*
  commentId: Overload:Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Pipeline
  parent: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient
  isExternal: false
  name: Pipeline
  nameWithType: PurviewDataSourceClient.Pipeline
  fullName: Azure.Analytics.Purview.Scanning.PurviewDataSourceClient.Pipeline
  monikers:
  - my-api
  type: property
